// Filters container
.filters-container {
  display: flex;
  gap: 1rem;
  padding: 0 1rem;
  align-items: center;
  flex-wrap: wrap;

  ion-select,
  ion-input {
    min-width: 120px;
    flex: 1;
  }
}

// Loading state
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 200px;
  gap: 1rem;
  color: var(--ion-color-medium, #92949c);
  
  p {
    margin: 0;
    font-style: italic;
  }
}

.hidden {
  display: none;
}

// Kanban board layout
.kanban-board {
  display: flex;
  gap: 1rem;
  padding: 1rem;
  height: calc(100vh - 200px); // Fixed height based on viewport
  overflow-x: auto;
  overflow-y: hidden; // Prevent vertical scroll on board level
}

.kanban-column {
  flex: 1;
  min-width: 300px;
  max-width: 350px; // Prevent columns from getting too wide
  background-color: var(--ion-color-light, #f8f9fa);
  border-radius: 8px;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  height: 100%; // Take full height of board
  position: relative;
  
  // Drag and drop visual feedback
  &.drag-over {
    background-color: var(--ion-color-primary-tint, #e6f3ff);
    border: 2px dashed var(--ion-color-primary, #3880ff);
  }

  &.drop-zone-active {
    border: 2px solid var(--ion-color-primary, #3880ff);
    background-color: var(--ion-color-primary-tint, #e6f3ff);
    
    &::before {
      content: 'Drop here';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: var(--ion-color-primary, #3880ff);
      font-weight: bold;
      font-size: 1.2rem;
      pointer-events: none;
      z-index: 10;
      background: rgba(255, 255, 255, 0.9);
      padding: 0.5rem 1rem;
      border-radius: 4px;
    }
  }

  // Mobile specific adjustments
  @media (max-width: 768px) {
    min-width: unset;
    max-width: unset;
    width: 100%;
    height: auto;
    max-height: 400px;
    margin-bottom: 1rem;

    &.drop-zone-active::before {
      font-size: 1rem;
    }
  }
}

.column-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid var(--ion-color-medium, #92949c);
  flex-shrink: 0; // Don't allow header to shrink

  h3 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--ion-color-dark, #222428);
  }
}

.column-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  overflow-y: auto; // Enable vertical scrolling
  overflow-x: hidden;
  padding-right: 4px; // Space for scrollbar
  
  // Custom scrollbar styling
  &::-webkit-scrollbar {
    width: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: var(--ion-color-light-shade, #e0e0e0);
    border-radius: 3px;
  }
  
  &::-webkit-scrollbar-thumb {
    background: var(--ion-color-medium, #92949c);
    border-radius: 3px;
  }
  
  &::-webkit-scrollbar-thumb:hover {
    background: var(--ion-color-medium-shade, #808289);
  }
}

// Work item cards
.work-item-card {
  margin: 0;
  cursor: grab;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  border-left: 4px solid var(--ion-color-primary, #3880ff);
  flex-shrink: 0; // Prevent cards from shrinking
  min-height: 120px; // Ensure minimum card height
  user-select: none; // Prevent text selection during drag

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  &:active {
    cursor: grabbing;
  }

  &.dragging {
    opacity: 0.7;
    transform: scale(1.05);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
  }

  // Different border colors based on priority
  &.priority-high {
    border-left-color: var(--ion-color-danger, #eb445a);
  }

  &.priority-medium {
    border-left-color: var(--ion-color-warning, #ffc409);
  }

  &.priority-low {
    border-left-color: var(--ion-color-success, #2dd36f);
  }

  // Mobile-specific styles
  @media (max-width: 768px) {
    cursor: pointer; // Change cursor for mobile
    min-height: 140px; // Slightly taller on mobile for better touch targets
    
    &:hover {
      transform: none; // Disable hover effects on mobile
      box-shadow: none;
    }

    &:active {
      transform: scale(0.98);
      opacity: 0.8;
    }
  }
}

.item-description {
  font-size: 0.9rem;
  color: var(--ion-color-medium-shade, #808289);
  margin: 0.5rem 0;
  line-height: 1.4;
  
  // Limit description to 3 lines
  display: -webkit-box;
  -webkit-line-clamp: 3;
  line-clamp: 3; // Standard property for compatibility
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.item-meta {
  display: flex;
  gap: 0.25rem;
  flex-wrap: wrap;
  margin: 0.75rem 0;
}

.item-actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.25rem;
  margin-top: 0.5rem;
  padding-top: 0.5rem;
  border-top: 1px solid var(--ion-color-light-shade, #e0e0e0);

  // Mobile: Make buttons slightly larger for better touch targets
  @media (max-width: 768px) {
    gap: 0.5rem;
    
    ion-button {
      --padding-start: 8px;
      --padding-end: 8px;
      min-height: 36px;
    }
  }
}

// Empty state
.empty-column {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 120px;
  height: 100%;
  color: var(--ion-color-medium, #92949c);
  font-style: italic;
  border: 2px dashed var(--ion-color-light-shade, #e0e0e0);
  border-radius: 8px;
  flex-shrink: 0; // Don't allow empty state to shrink
  
  p {
    margin: 0;
  }
}

// Responsive design
@media (max-width: 768px) {
  .kanban-board {
    flex-direction: column;
    padding: 0.5rem;
    height: auto; // Allow natural height on mobile
    overflow-y: auto;
  }

  .kanban-column {
    min-width: unset;
    max-width: unset;
    width: 100%;
    height: auto; // Allow natural height on mobile
    max-height: 400px; // Limit height on mobile
  }

  .column-content {
    max-height: 300px; // Ensure scrolling on mobile too
  }

  .filters-container {
    flex-direction: column;
    align-items: stretch;
    gap: 0.5rem;

    ion-select,
    ion-input {
      min-width: unset;
    }
  }
}

// Card animations
@keyframes cardEntry {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.work-item-card {
  animation: cardEntry 0.3s ease-out;
}

// Modal form styles
.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-top: 2rem;
  padding-top: 1rem;
  border-top: 1px solid var(--ion-color-light-shade, #e0e0e0);
}

.error-message {
  color: var(--ion-color-danger, #eb445a);
  font-size: 0.8rem;
  margin: 0.25rem 0 1rem 1rem;
  display: block;
}

ion-item {
  margin-bottom: 1rem;
  
  &.ion-invalid {
    --border-color: var(--ion-color-danger, #eb445a);
  }
}

ion-input.ion-invalid,
ion-textarea.ion-invalid,
ion-select.ion-invalid {
  --border-color: var(--ion-color-danger, #eb445a);
  --color: var(--ion-color-danger, #eb445a);
}

// Modal header
ion-modal {
  ion-header {
    ion-toolbar {
      --background: var(--ion-color-primary, #3880ff);
      --color: white;
    }
  }
}